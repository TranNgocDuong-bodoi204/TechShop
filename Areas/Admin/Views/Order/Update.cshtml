@using TechnicalShop.Areas.Admin.Model.DTO
@using TechnicalShop.Models.Enum
@model IEnumerable<UpdateDTO>

<div style="font-family:Arial, sans-serif; padding:20px; background:#f5f6fa; overflow-x:auto;">
  <!-- Thanh t√¨m ki·∫øm / l·ªçc -->
  <div style="margin-bottom:20px; display:flex; gap:12px; flex-wrap:wrap; align-items:center;">
    <input type="text" placeholder="T√¨m ki·∫øm kh√°ch h√†ng..." style="padding:8px 12px; border-radius:8px; border:1px solid #ccc; flex:1; min-width:200px;">
    <input type="date" style="padding:8px 12px; border-radius:8px; border:1px solid #ccc; min-width:150px;">
    <button style="padding:8px 16px; border-radius:8px; border:none; background:#0062cc; color:white; cursor:pointer; font-weight:500;">üîç L·ªçc</button>
    <button id="btnConfirm" 
        style="padding:8px 16px; border-radius:8px; border:none; background:#28a745; color:white; cursor:pointer; font-weight:500;">
      ‚úÖ X√°c nh·∫≠n
    </button>
  </div>

  <!-- B·∫£ng c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng -->
  <table style="width:100%; border-collapse:collapse; min-width:900px;">
    <thead>
      <tr style="background:#e9ecef; color:#555; text-align:left; font-weight:500;">
        <th style="padding:12px 15px; white-space:nowrap;">M√£ ƒë∆°n</th>
        <th style="padding:12px 15px; white-space:nowrap;">Ng√†y ƒë·∫∑t</th>
        <th style="padding:12px 15px;">Kh√°ch h√†ng</th>
        <th style="padding:12px 15px; white-space:nowrap;">SƒêT</th>
        <th style="padding:12px 15px;">Email</th>
        <th style="padding:12px 15px; text-align:right; white-space:nowrap;">T·ªïng ti·ªÅn</th>
        <th style="padding:12px 15px; white-space:nowrap;">Thanh to√°n</th>
        <th style="padding:12px 15px; white-space:nowrap;">Tr·∫°ng th√°i</th>
        <th style="padding:12px 15px; text-align:center; white-space:nowrap;">H√†nh ƒë·ªông</th>
      </tr>
    </thead>

    <tbody>
      @foreach(var item in Model)
      {
      <tr style="background:#fff; border-radius:8px; box-shadow:0 1px 3px rgba(0,0,0,0.08);">
        <td style="padding:10px 15px; white-space:nowrap;">#@item.id</td>
        <td style="padding:10px 15px; white-space:nowrap;">@item.orderedAt.ToString("dd/MM/yyyy")</td>
        <td style="padding:10px 15px; word-break:break-word;">@item.customerName</td>
        <td style="padding:10px 15px; white-space:nowrap;">@item.phone</td>
        <td style="padding:10px 15px; word-break:break-word;">@item.Email</td>
        <td style="padding:10px 15px; text-align:right; white-space:nowrap;">@item.totalPrice.ToString("N0")</td>

        
        <td style="padding:12px 15px;">
            <select style="padding:6px 10px; border-radius:6px; border:1px solid #ccc; font-size:14px;">
                @if(item.paymentStatus == PaymentStatus.Unpaid)
                {
                    <option selected value="@((int)PaymentStatus.Unpaid)">Ch∆∞a thanh to√°n</option>
                    <option value="@((int)PaymentStatus.Paid)">ƒê√£ thanh to√°n</option>
                }
                else
                {
                    <option selected value="@((int)PaymentStatus.Paid)">ƒê√£ thanh to√°n</option>
                    <option value="@((int)PaymentStatus.Unpaid)">Ch∆∞a thanh to√°n</option>
                }
            </select>
        </td>
        
        <td style="padding:12px 15px;">
              <select style="padding:6px 10px; border-radius:6px; border:1px solid #ccc; font-size:14px;">
                  @if(item.orderStatus == OrderStatus.Processing)
                  {
                      <option value="@((int)OrderStatus.Processing)" selected>ƒêang x·ª≠ l√Ω</option>
                  }
                  else
                  {
                      <option value="@((int)OrderStatus.Processing)">ƒêang x·ª≠ l√Ω</option>
                  }

                  @if(item.orderStatus == OrderStatus.Shipping)
                  {
                      <option value="@((int)OrderStatus.Shipping)" selected>ƒêang v·∫≠n chuy·ªÉn</option>
                  }
                  else
                  {
                      <option value="@((int)OrderStatus.Shipping)">ƒêang v·∫≠n chuy·ªÉn</option>
                  }

                  @if(item.orderStatus == OrderStatus.Completed)
                  {
                      <option value="@((int)OrderStatus.Completed)" selected>Ho√†n t·∫•t</option>
                  }
                  else
                  {
                      <option value="@((int)OrderStatus.Completed)">Ho√†n t·∫•t</option>
                  }

                  @if(item.orderStatus == OrderStatus.Cancelled)
                  {
                      <option value="@((int)OrderStatus.Cancelled)" selected>H·ªßy b·ªè</option>
                  }
                  else
                  {
                      <option value="@((int)OrderStatus.Cancelled)">H·ªßy b·ªè</option>
                  }
              </select>
          </td>

        <!-- N√∫t L∆∞u -->
        <td style="padding:10px 15px; text-align:center;">
          <button class="btnSave" data-id="@item.id"
            style="padding:4px 10px; border:none; border-radius:6px; background:#28a745; color:white; cursor:pointer; font-size:13px;">
          üíæ L∆∞u
        </button>
        </td>
      </tr>
      }
    </tbody>
  </table>
      <form asp-action="AcceptUpdate" asp-area="admin" asp-controller="Order" id="updateForm" method="post" ">
        <input type="hidden" name="updateList" id="updateListInput" />
      </form>
</div>

  <script>
  // M·∫£ng l∆∞u d·ªØ li·ªáu t·∫°m
  let updateList = [];
</script>

  <script>
  document.querySelectorAll(".btnSave").forEach(btn => {
    btn.addEventListener("click", function () {
      let row = this.closest("tr");
      let id = this.getAttribute("data-id");
      let paymentStatus = row.querySelector("td:nth-child(7) select").value;
      let orderStatus = row.querySelector("td:nth-child(8) select").value;

      // T·∫°o ƒë·ªëi t∆∞·ª£ng gi·ªëng UpdateDTO
      let updateItem = {
        id: parseInt(id),
        paymentStatus: parseInt(paymentStatus),
        orderStatus: parseInt(orderStatus)
      };

      // Ki·ªÉm tra n·∫øu ƒë√£ c√≥ id trong list th√¨ update, n·∫øu ch∆∞a th√¨ th√™m
      let existing = updateList.find(x => x.id == id);
      if (existing) {
        existing.paymentStatus = paymentStatus;
        existing.orderStatus = orderStatus;
      } else {
        updateList.push(updateItem);
      }

      console.log("Update list hi·ªán t·∫°i:", updateList);
      alert("ƒê√£ th√™m v√†o danh s√°ch thay ƒë·ªïi!");
    });
  });
</script>

  <script>
  document.getElementById("btnConfirm").addEventListener("click", function () {
    document.getElementById("updateListInput").value = JSON.stringify(updateList);
    document.getElementById("updateForm").submit();
  });
</script>


